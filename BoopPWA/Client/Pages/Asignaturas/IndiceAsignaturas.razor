@page "/asignaturas"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes

<center>
<h3>Indice Asignaturas</h3>

<div class="form-group">
    <a class="btn btn-info" href="asignaturas/crear">Agregar asignatura</a>
</div>

<ListadoGenerico Listado="asignaturas">
    <HayRegistrosCompleto>
        <table class="table table-striped tabla">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in asignaturas)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nombre</td>
                        <td width="20%">
                            <a href="/asignaturas/editar/@item.Id" class="btn btn-success">Editar</a>
                            <button @onclick="@(() => BorrarAsignatura(item))" class="btn btn-danger">Borrar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

<Paginar PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada" PaginasTotales="paginasTotales" />
</center>
@code {
    public List<Asignatura> asignaturas { get; set; }
    private int paginaActual = 1;
    private int paginasTotales;

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    private async Task Cargar(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Asignatura>>($"api/asignaturas?pagina={pagina}");
        if (!responseHttp.Error)
        {
            asignaturas = responseHttp.Response;            
            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());

            //Console.WriteLine($"conteo: {conteo}; totalPáginas: {totalPaginas}");
        }
    }

    private async Task BorrarAsignatura(Asignatura asignatura)
    {
        var responseHttp = await repositorio.Delete($"api/asignaturas/{asignatura.Id}");
        if (responseHttp.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            await Cargar();
        }
    }
}