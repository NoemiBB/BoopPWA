@page "/examenes/editar/{ExamenId:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensaje

<h3>Editar Examen</h3>
@if (examen == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioExamenes examen="examen" OnValidSubmit="Editar" OnCancel="Salir" />

}

@code {
    [Parameter] public int ExamenId { get; set; }
    private Examen examen;

    protected async override Task OnInitializedAsync()
    {

        var httpResponse = await repositorio.Get<Examen>($"api/examenes/{ExamenId}");
        examen = httpResponse.Response;
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("examenes");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            examen = httpResponse.Response;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/examenes", examen);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            Salir();
            //navigationManager.NavigateTo("examenes");
        }
    }

    private void Salir() => navigationManager.NavigateTo("/examenes");
}
