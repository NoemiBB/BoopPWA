@page  "/alumnos/editar/{AlumnoId:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensaje

<h3>Editar Alumno</h3>
@if (alumno == null)
{
    <text>Cargando...</text>
}else
            {
<FormularioAlumnos alumno="alumno" OnValidSubmit="Editar" OnCancel="Salir"/>

            }

@code {
    [Parameter] public int AlumnoId { get; set; }
    private Alumno alumno;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Alumno>($"api/alumnos/{AlumnoId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("alumnos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            alumno = httpResponse.Response;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/alumnos", alumno);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            Salir();
            //navigationManager.NavigateTo("alumnos");
        }
    }
    private void Salir() => navigationManager.NavigateTo("/alumnos");
}
